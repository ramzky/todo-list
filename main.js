(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,":root {\n  box-sizing: border-box;\n  --main-size: 60rem; /* 480px */\n  font-family:'Segoe UI', Tahoma, Geneva, Verdana sans-serif;\n  font-family: 'MonteCarlo', cursive;\n}\n*, *::before, *::after {\n  box-sizing: inherit;\n}\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n.main-container {\n  /*display: flex;*/\n  height: 100vh;\n  background-color: #DFE3F6;\n  /*position: relative;*/\n}\n.container {\n  margin: 0 auto;\n  flex: 0 0 auto;\n  /*background-image: url('./bg.jpg');*/\n  /*use below bg on menu tab*/\n  /*background: linear-gradient(rgba(0,0,0,.4), rgba(0,0,0,.4)), url('./bg.jpg');*/\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n.flex-top-box {\n  width: min(max(calc(var(--main-size) / 2), 100%), calc(var(--main-size) * 2));\n  min-height: var(--main-size);\n  border: 0.0625rem solid black;\n  background-color: #D2DAED;\n  /*background-color: #EA906C;*/\n  display: flex;\n  flex-flow: row wrap;\n  \n}\n.flex-box {\n  /*min-height: 2.5rem;*/\n  flex: 0 0 100%;\n  display: flex;\n  flex-flow: row wrap;\n  border: 0.0625rem solid goldenrod;\n}\n.flex-item {\n  flex: 0 0 100%;\n  border: 0.0625rem solid goldenrod;\n}\n\n\n.sidebar {\n  flex: 1 0 10rem;\n}\n.proj-card {\n\n}\n.proj-card:hover {\n  cursor: pointer;\n  background-color: #888;\n}\n\n\n.list-panel {\n  flex: 8 0 21rem;\n  padding: 2rem;\n}\n.card {\n  width: 100%;\n  /*min-height: 15rem;*/\n  padding: 1rem;\n  background-color: #eee;\n  border-radius: 1rem;\n  box-shadow: .25rem .3rem .5rem #888;\n  flex: 0 0 100%;\n  position: relative;\n}\n.card:hover {\n  /*background-color: #fff;\n  background-color: #EEE2DE;*/\n  box-shadow: .25rem .3rem 1rem #888;\n}\n.card .desc, .card .title {\n  resize: none;\n  background-color: transparent;\n  width: 100%;\n  min-height: 8rem;\n  padding: 0;\n  outline: none;\n  border: none;\n  border-top: .0625rem solid black;\n  border-bottom: .125rem solid black;\n  overflow-wrap: break-word;\n  word-break: break-all;\n  /*white-space: break-spaces;*/\n}\n.card .title {\n  border: none;\n  /*border-bottom: .125rem solid black;*/\n  min-height: .5rem;\n  font-size: 2rem;\n}\n.card button, .add-project, .add-list {\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  font-size: 1rem;\n}\n.card button:hover, .add-project:hover, .add-list:hover {\n  cursor: pointer;\n  color: #7287E9;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,kBAAkB,EAAE,UAAU;EAC9B,0DAA0D;EAC1D,kCAAkC;AACpC;AACA;EACE,mBAAmB;AACrB;AACA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,yBAAyB;EACzB,sBAAsB;AACxB;AACA;EACE,cAAc;EACd,cAAc;EACd,qCAAqC;EACrC,2BAA2B;EAC3B,gFAAgF;EAChF,sBAAsB;EACtB,4BAA4B;AAC9B;AACA;EACE,6EAA6E;EAC7E,4BAA4B;EAC5B,6BAA6B;EAC7B,yBAAyB;EACzB,6BAA6B;EAC7B,aAAa;EACb,mBAAmB;;AAErB;AACA;EACE,sBAAsB;EACtB,cAAc;EACd,aAAa;EACb,mBAAmB;EACnB,iCAAiC;AACnC;AACA;EACE,cAAc;EACd,iCAAiC;AACnC;;;AAGA;EACE,eAAe;AACjB;AACA;;AAEA;AACA;EACE,eAAe;EACf,sBAAsB;AACxB;;;AAGA;EACE,eAAe;EACf,aAAa;AACf;AACA;EACE,WAAW;EACX,qBAAqB;EACrB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,mCAAmC;EACnC,cAAc;EACd,kBAAkB;AACpB;AACA;EACE;6BAC2B;EAC3B,kCAAkC;AACpC;AACA;EACE,YAAY;EACZ,6BAA6B;EAC7B,WAAW;EACX,gBAAgB;EAChB,UAAU;EACV,aAAa;EACb,YAAY;EACZ,gCAAgC;EAChC,kCAAkC;EAClC,yBAAyB;EACzB,qBAAqB;EACrB,6BAA6B;AAC/B;AACA;EACE,YAAY;EACZ,sCAAsC;EACtC,iBAAiB;EACjB,eAAe;AACjB;AACA;EACE,UAAU;EACV,6BAA6B;EAC7B,YAAY;EACZ,eAAe;AACjB;AACA;EACE,eAAe;EACf,cAAc;AAChB",sourcesContent:[":root {\n  box-sizing: border-box;\n  --main-size: 60rem; /* 480px */\n  font-family:'Segoe UI', Tahoma, Geneva, Verdana sans-serif;\n  font-family: 'MonteCarlo', cursive;\n}\n*, *::before, *::after {\n  box-sizing: inherit;\n}\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n.main-container {\n  /*display: flex;*/\n  height: 100vh;\n  background-color: #DFE3F6;\n  /*position: relative;*/\n}\n.container {\n  margin: 0 auto;\n  flex: 0 0 auto;\n  /*background-image: url('./bg.jpg');*/\n  /*use below bg on menu tab*/\n  /*background: linear-gradient(rgba(0,0,0,.4), rgba(0,0,0,.4)), url('./bg.jpg');*/\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n.flex-top-box {\n  width: min(max(calc(var(--main-size) / 2), 100%), calc(var(--main-size) * 2));\n  min-height: var(--main-size);\n  border: 0.0625rem solid black;\n  background-color: #D2DAED;\n  /*background-color: #EA906C;*/\n  display: flex;\n  flex-flow: row wrap;\n  \n}\n.flex-box {\n  /*min-height: 2.5rem;*/\n  flex: 0 0 100%;\n  display: flex;\n  flex-flow: row wrap;\n  border: 0.0625rem solid goldenrod;\n}\n.flex-item {\n  flex: 0 0 100%;\n  border: 0.0625rem solid goldenrod;\n}\n\n\n.sidebar {\n  flex: 1 0 10rem;\n}\n.proj-card {\n\n}\n.proj-card:hover {\n  cursor: pointer;\n  background-color: #888;\n}\n\n\n.list-panel {\n  flex: 8 0 21rem;\n  padding: 2rem;\n}\n.card {\n  width: 100%;\n  /*min-height: 15rem;*/\n  padding: 1rem;\n  background-color: #eee;\n  border-radius: 1rem;\n  box-shadow: .25rem .3rem .5rem #888;\n  flex: 0 0 100%;\n  position: relative;\n}\n.card:hover {\n  /*background-color: #fff;\n  background-color: #EEE2DE;*/\n  box-shadow: .25rem .3rem 1rem #888;\n}\n.card .desc, .card .title {\n  resize: none;\n  background-color: transparent;\n  width: 100%;\n  min-height: 8rem;\n  padding: 0;\n  outline: none;\n  border: none;\n  border-top: .0625rem solid black;\n  border-bottom: .125rem solid black;\n  overflow-wrap: break-word;\n  word-break: break-all;\n  /*white-space: break-spaces;*/\n}\n.card .title {\n  border: none;\n  /*border-bottom: .125rem solid black;*/\n  min-height: .5rem;\n  font-size: 2rem;\n}\n.card button, .add-project, .add-list {\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  font-size: 1rem;\n}\n.card button:hover, .add-project:hover, .add-list:hover {\n  cursor: pointer;\n  color: #7287E9;\n}"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(i[d]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);r&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),n.push(s))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var d=e[c],l=r.base?d[0]+r.base:d[0],s=a[l]||0,A="".concat(l," ").concat(s);a[l]=s+1;var u=t(A),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)n[u].references++,n[u].updater(m);else{var p=o(m,r);r.byIndex=c,n.splice(c,0,{identifier:A,updater:p,references:1})}i.push(A)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var d=r(e,o),l=0;l<a.length;l++){var s=t(a[l]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}a=d}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{const e=function(e){const n=[];return{projects:n}}();let n=1e3,r=100;function o(t,r,o){const a=function(e,n){return{name:e,desc:n}}(t,r);a.id=n.toString(),n++;const i=e.projects.filter((e=>e.name===o));i.length>0&&(a.parentid=i[0].id,i[0].lists.push(a))}function a(n){const t=function(e,n){const t=[];return{name:e,lists:t}}(n);t.id=r.toString(),r++,e.projects.push(t)}document.body;const i=[],c=(e,n,t,...r)=>{((e,n)=>{for(let t=0;t<n;t++)i.splice(i.length,0,document.createElement(e))})(e,n);for(let e=0;e<n;e++)void 0!==r[e]&&i[e].classList.add(...r[e]);(e=>{for(;i.length>0;)e.appendChild(i.splice(0,1)[0])})(t)},d=e=>{for(;e.firstChild;)e.removeChild(e.firstChild)},l=e=>{for(;e.nextElementSibling;)e.parentElement.removeChild(e.nextElementSibling)};function s(e,...n){c("div",1,document.querySelector(".list-panel"),["card"]),c("div",1,document.querySelector(".list-panel > .card:last-child"),["form-container"]),document.querySelector(".list-panel > .card:last-child").setAttribute("data-listID",e.id),document.querySelector(".list-panel > .card:last-child").setAttribute("data-parentID",e.parentid);const t=".list-panel > .card:last-child";c("form",1,document.querySelector(t+" .form-container")),document.querySelector(t+" .form-container > form").setAttribute("action",""),document.querySelector(t+" .form-container > form").setAttribute("method","post"),document.querySelector(t+" .form-container > form").setAttribute("id","list"),c("div",2,document.querySelector(t+" .form-container > form"),["title"],["desc"]),document.querySelector(t+" .form-container .title").setAttribute("contenteditable","true"),document.querySelector(t+" .form-container .title").innerText=e.name,document.querySelector(t+" .form-container .desc").setAttribute("contenteditable","true"),document.querySelector(t+" .form-container .desc").innerText=e.desc,c("button",2,document.querySelector(t+" .form-container > form"),["save"],["delete"]),document.querySelector(t+" .form-container .save").setAttribute("type","button"),document.querySelector(t+" .form-container .save").setAttribute("data-name","SAVE"),document.querySelector(t+" .form-container .save").textContent="Save",document.querySelector(t+" .form-container .save").addEventListener("click",(n=>{p(n,e)})),document.querySelector(t+" .form-container .delete").setAttribute("type","button"),document.querySelector(t+" .form-container .delete").setAttribute("data-name","DELETE"),document.querySelector(t+" .form-container .delete").textContent="Delete",document.querySelector(t+" .form-container .delete").addEventListener("click",(t=>{p(t,e,n[0])}))}function A(e){c("div",1,document.querySelector(".sidebar"),["proj-card"]),document.querySelector(".sidebar .proj-card:last-child").setAttribute("data-projID",e.id),document.querySelector(".sidebar .proj-card:last-child").setAttribute("data-name","SWAP"),document.querySelector(".sidebar .proj-card:last-child").innerText=e.name,document.querySelector(".sidebar .proj-card:last-child").addEventListener("click",(n=>{p(n,e)}))}function u(e){c("button",1,document.querySelector(".list-panel"),["add-list"]),document.querySelector(".list-panel .add-list").textContent="Add List",document.querySelector(".list-panel .add-list").setAttribute("data-name","ADDLIST"),document.querySelector(".list-panel .add-list").addEventListener("click",(n=>{p(n,e)}))}function m(e,n){console.log(n),d(document.querySelector(".list-panel")),u(n),n.lists.forEach((e=>{s(e,n)}))}function p(n,...t){let r;switch(r=Event.prototype.isPrototypeOf(n)?n.target.dataset.name:"e is not event",r){case"SAVE":!function(e,n){let t=e.target.parentElement.firstElementChild,r=t.nextElementSibling;e.target.parentElement.parentElement.parentElement.dataset,console.log(n),n.name=t.innerText,n.desc=r.innerText,console.log(n)}(n,t[0]);break;case"SWAP":d=t[0],document.querySelectorAll(".sidebar .proj-card"),m(0,d);break;case"ADDPRJ":c=t[0],a("new project"),function(e){l(document.querySelector(".add-project")),e.forEach((e=>{A(e)}))}(c);break;case"ADDLIST":o("","",(i=t[0]).name),m(0,i),console.log(i.lists);break;case"DELETE":!function(n,t,r){let o=n.target.parentElement.parentElement.parentElement.dataset;const a=e.projects.filter((e=>e.id===o.parentid))[0].lists.indexOf(t);e.projects.filter((e=>e.id===o.parentid))[0].lists.splice(a,1),console.log(r),m(0,r),console.log(a)}(n,t[0],t[1])}var i,c,d}var f,b=t(379),C=t.n(b),E=t(795),g=t.n(E),h=t(569),v=t.n(h),y=t(565),B=t.n(y),x=t(216),S=t.n(x),k=t(589),j=t.n(k),q=t(426),w={};w.styleTagTransform=j(),w.setAttributes=B(),w.insert=v().bind(null,"head"),w.domAPI=g(),w.insertStyleElement=S(),C()(q.Z,w),q.Z&&q.Z.locals&&q.Z.locals,a("projnametest"),a("project22"),o("Default","test\ndesc","projnametest"),o("Default2","def2","projnametest"),o("Default4","def34","project22"),(f=e.projects).forEach((e=>{e.lists.forEach((e=>{}))})),function(e){c("div",1,document.body,["main-container"]),c("div",1,document.querySelector(".main-container"),["flex-top-box","container"]),c("div",2,document.querySelector(".container"),["flex-item","sidebar"],["flex-item","list-panel"]),c("button",1,document.querySelector(".sidebar"),["add-project"]),document.querySelector(".sidebar .add-project").textContent="Add Project",document.querySelector(".sidebar .add-project").setAttribute("data-name","ADDPRJ"),document.querySelector(".sidebar .add-project").addEventListener("click",(n=>{p(n,e)}))}(f),u(f[0]),f.forEach((e=>{A(e)})),f[0].lists.forEach((e=>s(e,f[0])))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,