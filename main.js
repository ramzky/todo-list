(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(537),o=t.n(r),a=t(645),c=t.n(a)()(o());c.push([e.id,":root {\n  box-sizing: border-box;\n  --main-size: 60rem; /* 480px */\n  font-family:'Segoe UI', Tahoma, Geneva, Verdana sans-serif;\n  font-family: 'MonteCarlo', cursive;\n}\n*, *::before, *::after {\n  box-sizing: inherit;\n}\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n.main-container {\n  /*display: flex;*/\n  height: 100vh;\n  background-color: #DFE3F6;\n  /*position: relative;*/\n}\n.container {\n  margin: 0 auto;\n  flex: 0 0 auto;\n  /*background-image: url('./bg.jpg');*/\n  /*use below bg on menu tab*/\n  /*background: linear-gradient(rgba(0,0,0,.4), rgba(0,0,0,.4)), url('./bg.jpg');*/\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n.flex-top-box {\n  width: min(max(calc(var(--main-size) / 2), 100%), calc(var(--main-size) * 2));\n  min-height: var(--main-size);\n  border: 0.0625rem solid black;\n  background-color: #D2DAED;\n  /*background-color: #EA906C;*/\n  display: flex;\n  flex-flow: row wrap;\n  \n}\n.flex-box {\n  /*min-height: 2.5rem;*/\n  flex: 0 0 100%;\n  display: flex;\n  flex-flow: row wrap;\n  border: 0.0625rem solid goldenrod;\n}\n.flex-item {\n  flex: 0 0 100%;\n  border: 0.0625rem solid goldenrod;\n}\n\n\n.sidebar {\n  max-width: 15rem;\n  flex: 1 0 10rem;\n}\n.proj-card {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n.proj-card:hover {\n  cursor: pointer;\n  background-color: #888;\n}\n.proj-card-select {\n  background-color: #999;\n}\n\n.list-panel {\n  flex: 8 0 21rem;\n  padding: 2rem;\n}\n.card {\n  width: 100%;\n  /*min-height: 15rem;*/\n  padding: 1rem;\n  background-color: #eee;\n  border-radius: 1rem;\n  box-shadow: .25rem .3rem .5rem #888;\n  flex: 0 0 100%;\n  position: relative;\n}\n.card:hover {\n  /*background-color: #fff;\n  background-color: #EEE2DE;*/\n  box-shadow: .25rem .3rem 1rem #888;\n}\n.card .desc, .card .title {\n  resize: none;\n  background-color: transparent;\n  width: 100%;\n  min-height: 8rem;\n  padding: 0;\n  outline: none;\n  border: none;\n  border-top: .0625rem solid black;\n  border-bottom: .125rem solid black;\n  overflow-wrap: break-word;\n  word-break: break-all;\n  /*white-space: break-spaces;*/\n}\n.card .title {\n  border: none;\n  /*border-bottom: .125rem solid black;*/\n  min-height: .5rem;\n  font-size: 2rem;\n}\n.card button, .add-project, .add-list, .delete-project {\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  font-size: 1rem;\n}\n.card button:hover,\n.add-project:hover,\n.add-list:hover,\n.delete-project:hover {\n  cursor: pointer;\n  color: #7287E9;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,kBAAkB,EAAE,UAAU;EAC9B,0DAA0D;EAC1D,kCAAkC;AACpC;AACA;EACE,mBAAmB;AACrB;AACA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,yBAAyB;EACzB,sBAAsB;AACxB;AACA;EACE,cAAc;EACd,cAAc;EACd,qCAAqC;EACrC,2BAA2B;EAC3B,gFAAgF;EAChF,sBAAsB;EACtB,4BAA4B;AAC9B;AACA;EACE,6EAA6E;EAC7E,4BAA4B;EAC5B,6BAA6B;EAC7B,yBAAyB;EACzB,6BAA6B;EAC7B,aAAa;EACb,mBAAmB;;AAErB;AACA;EACE,sBAAsB;EACtB,cAAc;EACd,aAAa;EACb,mBAAmB;EACnB,iCAAiC;AACnC;AACA;EACE,cAAc;EACd,iCAAiC;AACnC;;;AAGA;EACE,gBAAgB;EAChB,eAAe;AACjB;AACA;EACE,mBAAmB;EACnB,uBAAuB;EACvB,gBAAgB;AAClB;AACA;EACE,eAAe;EACf,sBAAsB;AACxB;AACA;EACE,sBAAsB;AACxB;;AAEA;EACE,eAAe;EACf,aAAa;AACf;AACA;EACE,WAAW;EACX,qBAAqB;EACrB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,mCAAmC;EACnC,cAAc;EACd,kBAAkB;AACpB;AACA;EACE;6BAC2B;EAC3B,kCAAkC;AACpC;AACA;EACE,YAAY;EACZ,6BAA6B;EAC7B,WAAW;EACX,gBAAgB;EAChB,UAAU;EACV,aAAa;EACb,YAAY;EACZ,gCAAgC;EAChC,kCAAkC;EAClC,yBAAyB;EACzB,qBAAqB;EACrB,6BAA6B;AAC/B;AACA;EACE,YAAY;EACZ,sCAAsC;EACtC,iBAAiB;EACjB,eAAe;AACjB;AACA;EACE,UAAU;EACV,6BAA6B;EAC7B,YAAY;EACZ,eAAe;AACjB;AACA;;;;EAIE,eAAe;EACf,cAAc;AAChB",sourcesContent:[":root {\n  box-sizing: border-box;\n  --main-size: 60rem; /* 480px */\n  font-family:'Segoe UI', Tahoma, Geneva, Verdana sans-serif;\n  font-family: 'MonteCarlo', cursive;\n}\n*, *::before, *::after {\n  box-sizing: inherit;\n}\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n.main-container {\n  /*display: flex;*/\n  height: 100vh;\n  background-color: #DFE3F6;\n  /*position: relative;*/\n}\n.container {\n  margin: 0 auto;\n  flex: 0 0 auto;\n  /*background-image: url('./bg.jpg');*/\n  /*use below bg on menu tab*/\n  /*background: linear-gradient(rgba(0,0,0,.4), rgba(0,0,0,.4)), url('./bg.jpg');*/\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n.flex-top-box {\n  width: min(max(calc(var(--main-size) / 2), 100%), calc(var(--main-size) * 2));\n  min-height: var(--main-size);\n  border: 0.0625rem solid black;\n  background-color: #D2DAED;\n  /*background-color: #EA906C;*/\n  display: flex;\n  flex-flow: row wrap;\n  \n}\n.flex-box {\n  /*min-height: 2.5rem;*/\n  flex: 0 0 100%;\n  display: flex;\n  flex-flow: row wrap;\n  border: 0.0625rem solid goldenrod;\n}\n.flex-item {\n  flex: 0 0 100%;\n  border: 0.0625rem solid goldenrod;\n}\n\n\n.sidebar {\n  max-width: 15rem;\n  flex: 1 0 10rem;\n}\n.proj-card {\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n.proj-card:hover {\n  cursor: pointer;\n  background-color: #888;\n}\n.proj-card-select {\n  background-color: #999;\n}\n\n.list-panel {\n  flex: 8 0 21rem;\n  padding: 2rem;\n}\n.card {\n  width: 100%;\n  /*min-height: 15rem;*/\n  padding: 1rem;\n  background-color: #eee;\n  border-radius: 1rem;\n  box-shadow: .25rem .3rem .5rem #888;\n  flex: 0 0 100%;\n  position: relative;\n}\n.card:hover {\n  /*background-color: #fff;\n  background-color: #EEE2DE;*/\n  box-shadow: .25rem .3rem 1rem #888;\n}\n.card .desc, .card .title {\n  resize: none;\n  background-color: transparent;\n  width: 100%;\n  min-height: 8rem;\n  padding: 0;\n  outline: none;\n  border: none;\n  border-top: .0625rem solid black;\n  border-bottom: .125rem solid black;\n  overflow-wrap: break-word;\n  word-break: break-all;\n  /*white-space: break-spaces;*/\n}\n.card .title {\n  border: none;\n  /*border-bottom: .125rem solid black;*/\n  min-height: .5rem;\n  font-size: 2rem;\n}\n.card button, .add-project, .add-list, .delete-project {\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  font-size: 1rem;\n}\n.card button:hover,\n.add-project:hover,\n.add-list:hover,\n.delete-project:hover {\n  cursor: pointer;\n  color: #7287E9;\n}"],sourceRoot:""}]);const i=c},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(c[d]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);r&&c[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),o&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=o):s[4]="".concat(o)),n.push(s))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},c=[],i=0;i<e.length;i++){var d=e[i],l=r.base?d[0]+r.base:d[0],s=a[l]||0,A="".concat(l," ").concat(s);a[l]=s+1;var u=t(A),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)n[u].references++,n[u].updater(m);else{var p=o(m,r);r.byIndex=i,n.splice(i,0,{identifier:A,updater:p,references:1})}c.push(A)}return c}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var i=t(a[c]);n[i].references--}for(var d=r(e,o),l=0;l<a.length;l++){var s=t(a[l]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}a=d}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{const e="todolistobj";let n,r,o;function a(...t){const a={};a.fdSave=n,a.listIDSave=r,a.projIDSave=o,localStorage.setItem(e,JSON.stringify(a))}localStorage.getItem(e)?function(...t){const a=JSON.parse(localStorage.getItem(e));n=a.fdSave,r=a.listIDSave,o=a.projIDSave}():(n=function(e){const n=[];return{projects:n}}(),r=1e3,o=100,a()),document.body;const c=[],i=(e,n,t,...r)=>{((e,n)=>{for(let t=0;t<n;t++)c.splice(c.length,0,document.createElement(e))})(e,n);for(let e=0;e<n;e++)void 0!==r[e]&&c[e].classList.add(...r[e]);(e=>{for(;c.length>0;)e.appendChild(c.splice(0,1)[0])})(t)},d=e=>{for(;e.firstChild;)e.removeChild(e.firstChild)},l=e=>{for(;e.nextElementSibling;)e.parentElement.removeChild(e.nextElementSibling)};let s=0;function A(e,...n){i("div",1,document.querySelector(".list-panel"),["card"]),i("div",1,document.querySelector(".list-panel > .card:last-child"),["form-container"]),document.querySelector(".list-panel > .card:last-child").setAttribute("data-listID",e.id),document.querySelector(".list-panel > .card:last-child").setAttribute("data-parentID",e.parentid);const t=".list-panel > .card:last-child";i("form",1,document.querySelector(t+" .form-container")),document.querySelector(t+" .form-container > form").setAttribute("action",""),document.querySelector(t+" .form-container > form").setAttribute("method","post"),document.querySelector(t+" .form-container > form").setAttribute("id","list"),i("div",2,document.querySelector(t+" .form-container > form"),["title"],["desc"]),document.querySelector(t+" .form-container .title").setAttribute("contenteditable","true"),document.querySelector(t+" .form-container .title").innerText=e.name,document.querySelector(t+" .form-container .title").setAttribute("data-name","SAVE"),document.querySelector(t+" .form-container .title").addEventListener("blur",(n=>{g(n,e)})),document.querySelector(t+" .form-container .desc").setAttribute("contenteditable","true"),document.querySelector(t+" .form-container .desc").innerText=e.desc,document.querySelector(t+" .form-container .desc").setAttribute("data-name","SAVE"),document.querySelector(t+" .form-container .desc").addEventListener("blur",(n=>{g(n,e)})),i("button",2,document.querySelector(t+" .form-container > form"),["save"],["delete"]),document.querySelector(t+" .form-container .save").setAttribute("type","button"),document.querySelector(t+" .form-container .save").setAttribute("data-name","SAVE"),document.querySelector(t+" .form-container .save").textContent="Save",document.querySelector(t+" .form-container .save").addEventListener("click",(n=>{g(n,e)})),document.querySelector(t+" .form-container .delete").setAttribute("type","button"),document.querySelector(t+" .form-container .delete").setAttribute("data-name","DELETE"),document.querySelector(t+" .form-container .delete").textContent="Delete",document.querySelector(t+" .form-container .delete").addEventListener("click",(t=>{g(t,e,n[0])}))}function u(e){i("div",1,document.querySelector(".sidebar"),["proj-card"]),document.querySelector(".sidebar .proj-card:last-child").setAttribute("data-projID",e.id),document.querySelector(".sidebar .proj-card:last-child").setAttribute("data-name","SWAP"),document.querySelector(".sidebar .proj-card:last-child").innerText=e.name,document.querySelector(".sidebar .proj-card:last-child").addEventListener("click",(n=>{g(n,e)})),document.querySelector(".sidebar .proj-card:last-child").addEventListener("dblclick",(n=>{g(n,e),n.target.focus()})),document.querySelector(".sidebar .proj-card:last-child").addEventListener("keydown",(n=>{g(n,e)})),document.querySelector(".sidebar .proj-card:last-child").addEventListener("blur",(n=>{g(n,e)}))}function m(e){i("button",1,document.querySelector(".list-panel"),["add-list"]),document.querySelector(".list-panel .add-list").textContent="Add List",document.querySelector(".list-panel .add-list").setAttribute("data-name","ADDLIST"),document.querySelector(".list-panel .add-list").addEventListener("click",(n=>{g(n,e)}))}function p(e,n){console.log(n),d(document.querySelector(".list-panel")),m(n),n.lists.forEach((e=>{A(e,n)}))}function f(e){l(document.querySelector(".div-project")),e.forEach((e=>{u(e)}))}function b(e,n){if(console.log(s),document.querySelectorAll(".proj-card").forEach((e=>{e.classList.remove("proj-card-select")})),null==e)s<1&&(document.querySelector(".proj-card").classList.add("proj-card-select"),s=1),s>0&&Array.from(document.querySelector(".sidebar").children).at(s).classList.add("proj-card-select");else{e.target.classList.add("proj-card-select");const n=document.querySelector(".sidebar").children,t=Array.from(n).filter((n=>n===e.target));s=Array.from(n).indexOf(t[0]),console.log(s)}}function E(e,t,r){void 0===r&&(r=`temp ${Math.floor(1e4*Math.random())}`),function(e){const t=function(e,n){const t=[];return{name:e,lists:t}}(e);t.id=o.toString(),o++,n.projects.push(t)}(r),f(t),b(),a()}function C(e,n){e.target.setAttribute("contenteditable","false"),n.name=e.target.innerText,a()}function g(e,...t){let o;switch(o=Event.prototype.isPrototypeOf(e)?e.target.dataset.name:"e is not event",o){case"SAVE":!function(e,n){let t=e.target.parentElement.firstElementChild,r=t.nextElementSibling;e.target.parentElement.parentElement.parentElement.dataset,console.log(n),n.name=t.innerText,n.desc=r.innerText,console.log(n),a()}(e,t[0]);break;case"SWAP":"dblclick"===e.type?function(e,n){e.target.setAttribute("contenteditable","true")}(e,t[0]):"keydown"===e.type&&"Enter"===e.key?(e.preventDefault(),C(e,t[0])):"blur"===e.type?C(e,t[0]):"click"===e.type&&function(e,n){document.querySelectorAll(".sidebar .proj-card"),p(0,n),b(e)}(e,t[0]);break;case"ADDPRJ":E(0,t[0]);break;case"DELPRJ":!function(e,t){const r=t.at(s-1);null!=document.querySelector(".div-project").nextElementSibling&&null!=r&&(function(e){const t=n.projects.indexOf(e);n.projects.splice(t,1)}(r),f(t),l(document.querySelector(".add-list")),s=0,t.length>0&&(b(),p(0,t.at(s-1)))),a()}(0,t[0]);break;case"ADDLIST":c=t[0],console.log(n.projects.indexOf(c)),-1===n.projects.indexOf(c)&&(c=void 0),void 0===c&&(void 0===n.projects[0]&&E(0,n.projects,`name ${Math.floor(1e4*Math.random())}`),c=n.projects[0]),function(e,t,o){const a={name:"",desc:""};a.id=r.toString(),r++;const c=n.projects.filter((e=>e.name===o));c.length>0&&(a.parentid=c[0].id,c[0].lists.push(a))}(0,0,c.name),p(0,c),console.log(c.lists),a();break;case"DELETE":!function(e,t,r){let o=e.target.parentElement.parentElement.parentElement.dataset;const c=n.projects.filter((e=>e.id===o.parentid))[0].lists.indexOf(t);n.projects.filter((e=>e.id===o.parentid))[0].lists.splice(c,1),console.log(r),p(0,r),console.log(c),a()}(e,t[0],t[1])}var c}var v,h=t(379),y=t.n(h),B=t(795),S=t.n(B),x=t(569),j=t.n(x),k=t(565),q=t.n(k),w=t(216),D=t.n(w),L=t(589),z=t.n(L),T=t(426),I={};I.styleTagTransform=z(),I.setAttributes=q(),I.insert=j().bind(null,"head"),I.domAPI=S(),I.insertStyleElement=D(),y()(T.Z,I),T.Z&&T.Z.locals&&T.Z.locals,(v=n.projects).forEach((e=>{e.lists.forEach((e=>{}))})),function(e){i("div",1,document.body,["main-container"]),i("div",1,document.querySelector(".main-container"),["flex-top-box","container"]),i("div",2,document.querySelector(".container"),["flex-item","sidebar"],["flex-item","list-panel"]),i("div",1,document.querySelector(".sidebar"),["div-project"]),i("button",1,document.querySelector(".sidebar .div-project"),["add-project"]),document.querySelector(".sidebar .add-project").textContent="Add Project",document.querySelector(".sidebar .add-project").setAttribute("data-name","ADDPRJ"),document.querySelector(".sidebar .add-project").addEventListener("click",(n=>{g(n,e)})),i("button",1,document.querySelector(".sidebar .div-project"),["delete-project"]),document.querySelector(".sidebar .delete-project").textContent="Remove",document.querySelector(".sidebar .delete-project").setAttribute("data-name","DELPRJ"),document.querySelector(".sidebar .delete-project").addEventListener("click",(n=>{g(n,e)})),console.log(e)}(v),m(v[0]),v.forEach((e=>{u(e)})),v.length>0&&(v[0].lists.forEach((e=>A(e,v[0]))),b()),setTimeout((()=>console.log(n)),5e3),console.log(JSON.parse(JSON.stringify(n)))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Yyx5QkFDdkIsQ0FBQyxtQkFDSEQsU0FBU0MsY0FBYyw0QkFDcEJ3RixZQUFjLFNBQ2pCekYsU0FBU0MsY0FBYyw0QkFDcEJlLGFBQWEsWUFBYSxVQUM3QmhCLFNBQVNDLGNBQWMsNEJBQ3BCcUYsaUJBQWlCLFNBQVVDLElBQzFCLEVBQWdCQSxFQUFPdkIsRUFBTyxJQUVsQytCLFFBQVFDLElBQUloQyxFQUNkLENBc0xFOEUsQ0FBYTlFLEdBQ2I2QixFQUFpQjdCLEVBQU8sSUFDeEJBLEVBQU9rQyxTQUFTUCxJQUVkRCxFQUFlQyxFQUFJLElBUWpCM0IsRUFBT3hILE9BQVMsSUFDbEJ3SCxFQUFPLEdBQUdpQyxNQUFNQyxTQUFTbEssR0FBU2lKLEVBQVdqSixFQUFNZ0ksRUFBTyxNQUMxRG9DLEtHbkxKMkMsWUFBVyxJQUFNaEQsUUFBUUMsSUFBSSxJQUFVLEtBQ3ZDRCxRQUFRQyxJQUFJdkksS0FBS21HLE1BQU1uRyxLQUFLQyxVQUFVLEkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvY29tcG9uZW50T2Jqcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvY29tcG9uZW50TGF5b3V0LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9jb21wb25lbnRTY3JlZW4uanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2NvbXBvbmVudElucHV0LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYDpyb290IHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLS1tYWluLXNpemU6IDYwcmVtOyAvKiA0ODBweCAqL1xuICBmb250LWZhbWlseTonU2Vnb2UgVUknLCBUYWhvbWEsIEdlbmV2YSwgVmVyZGFuYSBzYW5zLXNlcmlmO1xuICBmb250LWZhbWlseTogJ01vbnRlQ2FybG8nLCBjdXJzaXZlO1xufVxuKiwgKjo6YmVmb3JlLCAqOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4ubWFpbi1jb250YWluZXIge1xuICAvKmRpc3BsYXk6IGZsZXg7Ki9cbiAgaGVpZ2h0OiAxMDB2aDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0RGRTNGNjtcbiAgLypwb3NpdGlvbjogcmVsYXRpdmU7Ki9cbn1cbi5jb250YWluZXIge1xuICBtYXJnaW46IDAgYXV0bztcbiAgZmxleDogMCAwIGF1dG87XG4gIC8qYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuL2JnLmpwZycpOyovXG4gIC8qdXNlIGJlbG93IGJnIG9uIG1lbnUgdGFiKi9cbiAgLypiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQocmdiYSgwLDAsMCwuNCksIHJnYmEoMCwwLDAsLjQpKSwgdXJsKCcuL2JnLmpwZycpOyovXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG4uZmxleC10b3AtYm94IHtcbiAgd2lkdGg6IG1pbihtYXgoY2FsYyh2YXIoLS1tYWluLXNpemUpIC8gMiksIDEwMCUpLCBjYWxjKHZhcigtLW1haW4tc2l6ZSkgKiAyKSk7XG4gIG1pbi1oZWlnaHQ6IHZhcigtLW1haW4tc2l6ZSk7XG4gIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkIGJsYWNrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDJEQUVEO1xuICAvKmJhY2tncm91bmQtY29sb3I6ICNFQTkwNkM7Ki9cbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgXG59XG4uZmxleC1ib3gge1xuICAvKm1pbi1oZWlnaHQ6IDIuNXJlbTsqL1xuICBmbGV4OiAwIDAgMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgYm9yZGVyOiAwLjA2MjVyZW0gc29saWQgZ29sZGVucm9kO1xufVxuLmZsZXgtaXRlbSB7XG4gIGZsZXg6IDAgMCAxMDAlO1xuICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCBnb2xkZW5yb2Q7XG59XG5cblxuLnNpZGViYXIge1xuICBtYXgtd2lkdGg6IDE1cmVtO1xuICBmbGV4OiAxIDAgMTByZW07XG59XG4ucHJvai1jYXJkIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4ucHJvai1jYXJkOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODg4O1xufVxuLnByb2otY2FyZC1zZWxlY3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTk5O1xufVxuXG4ubGlzdC1wYW5lbCB7XG4gIGZsZXg6IDggMCAyMXJlbTtcbiAgcGFkZGluZzogMnJlbTtcbn1cbi5jYXJkIHtcbiAgd2lkdGg6IDEwMCU7XG4gIC8qbWluLWhlaWdodDogMTVyZW07Ki9cbiAgcGFkZGluZzogMXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTtcbiAgYm9yZGVyLXJhZGl1czogMXJlbTtcbiAgYm94LXNoYWRvdzogLjI1cmVtIC4zcmVtIC41cmVtICM4ODg7XG4gIGZsZXg6IDAgMCAxMDAlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4uY2FyZDpob3ZlciB7XG4gIC8qYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VFRTJERTsqL1xuICBib3gtc2hhZG93OiAuMjVyZW0gLjNyZW0gMXJlbSAjODg4O1xufVxuLmNhcmQgLmRlc2MsIC5jYXJkIC50aXRsZSB7XG4gIHJlc2l6ZTogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHdpZHRoOiAxMDAlO1xuICBtaW4taGVpZ2h0OiA4cmVtO1xuICBwYWRkaW5nOiAwO1xuICBvdXRsaW5lOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci10b3A6IC4wNjI1cmVtIHNvbGlkIGJsYWNrO1xuICBib3JkZXItYm90dG9tOiAuMTI1cmVtIHNvbGlkIGJsYWNrO1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG4gIC8qd2hpdGUtc3BhY2U6IGJyZWFrLXNwYWNlczsqL1xufVxuLmNhcmQgLnRpdGxlIHtcbiAgYm9yZGVyOiBub25lO1xuICAvKmJvcmRlci1ib3R0b206IC4xMjVyZW0gc29saWQgYmxhY2s7Ki9cbiAgbWluLWhlaWdodDogLjVyZW07XG4gIGZvbnQtc2l6ZTogMnJlbTtcbn1cbi5jYXJkIGJ1dHRvbiwgLmFkZC1wcm9qZWN0LCAuYWRkLWxpc3QsIC5kZWxldGUtcHJvamVjdCB7XG4gIHBhZGRpbmc6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbn1cbi5jYXJkIGJ1dHRvbjpob3Zlcixcbi5hZGQtcHJvamVjdDpob3Zlcixcbi5hZGQtbGlzdDpob3Zlcixcbi5kZWxldGUtcHJvamVjdDpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY29sb3I6ICM3Mjg3RTk7XG59YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0Usc0JBQXNCO0VBQ3RCLGtCQUFrQixFQUFFLFVBQVU7RUFDOUIsMERBQTBEO0VBQzFELGtDQUFrQztBQUNwQztBQUNBO0VBQ0UsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxTQUFTO0VBQ1QsVUFBVTtBQUNaOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSxjQUFjO0VBQ2QsY0FBYztFQUNkLHFDQUFxQztFQUNyQywyQkFBMkI7RUFDM0IsZ0ZBQWdGO0VBQ2hGLHNCQUFzQjtFQUN0Qiw0QkFBNEI7QUFDOUI7QUFDQTtFQUNFLDZFQUE2RTtFQUM3RSw0QkFBNEI7RUFDNUIsNkJBQTZCO0VBQzdCLHlCQUF5QjtFQUN6Qiw2QkFBNkI7RUFDN0IsYUFBYTtFQUNiLG1CQUFtQjs7QUFFckI7QUFDQTtFQUNFLHNCQUFzQjtFQUN0QixjQUFjO0VBQ2QsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixpQ0FBaUM7QUFDbkM7QUFDQTtFQUNFLGNBQWM7RUFDZCxpQ0FBaUM7QUFDbkM7OztBQUdBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGVBQWU7QUFDakI7QUFDQTtFQUNFLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxlQUFlO0VBQ2Ysc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsYUFBYTtBQUNmO0FBQ0E7RUFDRSxXQUFXO0VBQ1gscUJBQXFCO0VBQ3JCLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsbUJBQW1CO0VBQ25CLG1DQUFtQztFQUNuQyxjQUFjO0VBQ2Qsa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRTs2QkFDMkI7RUFDM0Isa0NBQWtDO0FBQ3BDO0FBQ0E7RUFDRSxZQUFZO0VBQ1osNkJBQTZCO0VBQzdCLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLGFBQWE7RUFDYixZQUFZO0VBQ1osZ0NBQWdDO0VBQ2hDLGtDQUFrQztFQUNsQyx5QkFBeUI7RUFDekIscUJBQXFCO0VBQ3JCLDZCQUE2QjtBQUMvQjtBQUNBO0VBQ0UsWUFBWTtFQUNaLHNDQUFzQztFQUN0QyxpQkFBaUI7RUFDakIsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsVUFBVTtFQUNWLDZCQUE2QjtFQUM3QixZQUFZO0VBQ1osZUFBZTtBQUNqQjtBQUNBOzs7O0VBSUUsZUFBZTtFQUNmLGNBQWM7QUFDaEJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiOnJvb3Qge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIC0tbWFpbi1zaXplOiA2MHJlbTsgLyogNDgwcHggKi9cXG4gIGZvbnQtZmFtaWx5OidTZWdvZSBVSScsIFRhaG9tYSwgR2VuZXZhLCBWZXJkYW5hIHNhbnMtc2VyaWY7XFxuICBmb250LWZhbWlseTogJ01vbnRlQ2FybG8nLCBjdXJzaXZlO1xcbn1cXG4qLCAqOjpiZWZvcmUsICo6OmFmdGVyIHtcXG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XFxufVxcbmJvZHkge1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG59XFxuXFxuLm1haW4tY29udGFpbmVyIHtcXG4gIC8qZGlzcGxheTogZmxleDsqL1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNERkUzRjY7XFxuICAvKnBvc2l0aW9uOiByZWxhdGl2ZTsqL1xcbn1cXG4uY29udGFpbmVyIHtcXG4gIG1hcmdpbjogMCBhdXRvO1xcbiAgZmxleDogMCAwIGF1dG87XFxuICAvKmJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi9iZy5qcGcnKTsqL1xcbiAgLyp1c2UgYmVsb3cgYmcgb24gbWVudSB0YWIqL1xcbiAgLypiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQocmdiYSgwLDAsMCwuNCksIHJnYmEoMCwwLDAsLjQpKSwgdXJsKCcuL2JnLmpwZycpOyovXFxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG59XFxuLmZsZXgtdG9wLWJveCB7XFxuICB3aWR0aDogbWluKG1heChjYWxjKHZhcigtLW1haW4tc2l6ZSkgLyAyKSwgMTAwJSksIGNhbGModmFyKC0tbWFpbi1zaXplKSAqIDIpKTtcXG4gIG1pbi1oZWlnaHQ6IHZhcigtLW1haW4tc2l6ZSk7XFxuICBib3JkZXI6IDAuMDYyNXJlbSBzb2xpZCBibGFjaztcXG4gIGJhY2tncm91bmQtY29sb3I6ICNEMkRBRUQ7XFxuICAvKmJhY2tncm91bmQtY29sb3I6ICNFQTkwNkM7Ki9cXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xcbiAgXFxufVxcbi5mbGV4LWJveCB7XFxuICAvKm1pbi1oZWlnaHQ6IDIuNXJlbTsqL1xcbiAgZmxleDogMCAwIDEwMCU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcXG4gIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkIGdvbGRlbnJvZDtcXG59XFxuLmZsZXgtaXRlbSB7XFxuICBmbGV4OiAwIDAgMTAwJTtcXG4gIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkIGdvbGRlbnJvZDtcXG59XFxuXFxuXFxuLnNpZGViYXIge1xcbiAgbWF4LXdpZHRoOiAxNXJlbTtcXG4gIGZsZXg6IDEgMCAxMHJlbTtcXG59XFxuLnByb2otY2FyZCB7XFxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG4ucHJvai1jYXJkOmhvdmVyIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM4ODg7XFxufVxcbi5wcm9qLWNhcmQtc2VsZWN0IHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM5OTk7XFxufVxcblxcbi5saXN0LXBhbmVsIHtcXG4gIGZsZXg6IDggMCAyMXJlbTtcXG4gIHBhZGRpbmc6IDJyZW07XFxufVxcbi5jYXJkIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgLyptaW4taGVpZ2h0OiAxNXJlbTsqL1xcbiAgcGFkZGluZzogMXJlbTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XFxuICBib3JkZXItcmFkaXVzOiAxcmVtO1xcbiAgYm94LXNoYWRvdzogLjI1cmVtIC4zcmVtIC41cmVtICM4ODg7XFxuICBmbGV4OiAwIDAgMTAwJTtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuLmNhcmQ6aG92ZXIge1xcbiAgLypiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VFRTJERTsqL1xcbiAgYm94LXNoYWRvdzogLjI1cmVtIC4zcmVtIDFyZW0gIzg4ODtcXG59XFxuLmNhcmQgLmRlc2MsIC5jYXJkIC50aXRsZSB7XFxuICByZXNpemU6IG5vbmU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgbWluLWhlaWdodDogOHJlbTtcXG4gIHBhZGRpbmc6IDA7XFxuICBvdXRsaW5lOiBub25lO1xcbiAgYm9yZGVyOiBub25lO1xcbiAgYm9yZGVyLXRvcDogLjA2MjVyZW0gc29saWQgYmxhY2s7XFxuICBib3JkZXItYm90dG9tOiAuMTI1cmVtIHNvbGlkIGJsYWNrO1xcbiAgb3ZlcmZsb3ctd3JhcDogYnJlYWstd29yZDtcXG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcXG4gIC8qd2hpdGUtc3BhY2U6IGJyZWFrLXNwYWNlczsqL1xcbn1cXG4uY2FyZCAudGl0bGUge1xcbiAgYm9yZGVyOiBub25lO1xcbiAgLypib3JkZXItYm90dG9tOiAuMTI1cmVtIHNvbGlkIGJsYWNrOyovXFxuICBtaW4taGVpZ2h0OiAuNXJlbTtcXG4gIGZvbnQtc2l6ZTogMnJlbTtcXG59XFxuLmNhcmQgYnV0dG9uLCAuYWRkLXByb2plY3QsIC5hZGQtbGlzdCwgLmRlbGV0ZS1wcm9qZWN0IHtcXG4gIHBhZGRpbmc6IDA7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGZvbnQtc2l6ZTogMXJlbTtcXG59XFxuLmNhcmQgYnV0dG9uOmhvdmVyLFxcbi5hZGQtcHJvamVjdDpob3ZlcixcXG4uYWRkLWxpc3Q6aG92ZXIsXFxuLmRlbGV0ZS1wcm9qZWN0OmhvdmVyIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGNvbG9yOiAjNzI4N0U5O1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiY29uc3Qga2V5TmFtZU9iaiA9ICd0b2RvbGlzdG9iaidcbmxldCBmZDtcbmxldCBsaXN0SUQ7XG5sZXQgcHJvaklEO1xuaWYgKCFsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXlOYW1lT2JqKSkge1xuICBmZCA9IGZvbGRlcigpO1xuICBsaXN0SUQgPSAxMDAwO1xuICBwcm9qSUQgPSAxMDA7XG4gIHNhdmVUb0xvY2FsKGtleU5hbWVPYmosIGZkLCBsaXN0SUQsIHByb2pJRCk7XG59IGVsc2UgZ2V0RnJvbUxvY2FsKGtleU5hbWVPYmopO1xuXG5mdW5jdGlvbiBzYXZlVG9Mb2NhbCguLi5vYmpzKSB7XG4gIGNvbnN0IG9iaiA9IHt9O1xuICBvYmouZmRTYXZlID0gZmQ7XG4gIG9iai5saXN0SURTYXZlID0gbGlzdElEO1xuICBvYmoucHJvaklEU2F2ZSA9IHByb2pJRDtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5TmFtZU9iaiwgSlNPTi5zdHJpbmdpZnkob2JqKSk7XG59XG5cbmZ1bmN0aW9uIGdldEZyb21Mb2NhbCguLi5vYmpzKSB7XG4gIGNvbnN0IG9iaiA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5TmFtZU9iaikpO1xuICBmZCA9IG9iai5mZFNhdmU7XG4gIGxpc3RJRCA9IG9iai5saXN0SURTYXZlO1xuICBwcm9qSUQgPSBvYmoucHJvaklEU2F2ZTtcbn1cblxuZnVuY3Rpb24gbGlzdChuYW1lLCBkZXNjKSB7XG4gIHJldHVybiB7XG4gICAgbmFtZSxcbiAgICBkZXNjXG4gIH1cbn1cblxuZnVuY3Rpb24gcHJvamVjdChuYW1lLCBsaXN0KSB7XG4gIGNvbnN0IGxpc3RzID0gW107XG4gIGlmIChsaXN0ICE9IHVuZGVmaW5lZCkgbGlzdHMucHVzaChsaXN0KTtcblxuICByZXR1cm4ge1xuICAgIG5hbWUsXG4gICAgbGlzdHNcbiAgfVxufVxuXG5mdW5jdGlvbiBmb2xkZXIocHJvamVjdCkge1xuICBjb25zdCBwcm9qZWN0cyA9IFtdO1xuICBpZiAocHJvamVjdCAhPSB1bmRlZmluZWQpIHByb2plY3RzLnB1c2gocHJvamVjdCk7XG5cbiAgcmV0dXJuIHtcbiAgICBwcm9qZWN0c1xuICB9O1xufVxuXG4vLyBhY3Rpb25zL2NvbW1hbmRzLi4uXG4gIGZ1bmN0aW9uIGFkZExpc3QobmFtZSwgZGVzYywgcHJvak5hbWUpIHtcbiAgICBjb25zdCBuZXdMaXN0ID0gbGlzdChuYW1lLCBkZXNjKTtcbiAgICBuZXdMaXN0LmlkID0gbGlzdElELnRvU3RyaW5nKCk7XG4gICAgbGlzdElEKys7XG5cbiAgICBjb25zdCBwcm9qID0gZmQucHJvamVjdHMuZmlsdGVyKChwcm9qZWN0KSA9PiBwcm9qZWN0Lm5hbWUgPT09IHByb2pOYW1lKTtcbiAgICBpZiAocHJvai5sZW5ndGggPiAwKSB7XG4gICAgICBuZXdMaXN0LnBhcmVudGlkID0gcHJvalswXS5pZDtcbiAgICAgIHByb2pbMF0ubGlzdHMucHVzaChuZXdMaXN0KTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gYWRkUHJvaihwcm9qTmFtZSkge1xuICAgIGNvbnN0IG5ld1Byb2ogPSBwcm9qZWN0KHByb2pOYW1lKTtcbiAgICBuZXdQcm9qLmlkID0gcHJvaklELnRvU3RyaW5nKCk7XG4gICAgcHJvaklEKys7XG5cbiAgICBmZC5wcm9qZWN0cy5wdXNoKG5ld1Byb2opO1xuICB9XG5cbiAgZnVuY3Rpb24gZGVsUHJvaihwcm9qZWN0T2JqKSB7XG4gICAgY29uc3QgcHJvakluZGV4ID0gZmQucHJvamVjdHMuaW5kZXhPZihwcm9qZWN0T2JqKTtcbiAgICBmZC5wcm9qZWN0cy5zcGxpY2UocHJvakluZGV4LCAxKTtcbiAgICAvL2NvbnNvbGUubG9nKCdkZWxldGVkICcgKyBwcm9qSW5kZXgpO1xuICB9XG5cbmV4cG9ydCB7XG4gIGxpc3QsXG4gIHByb2plY3QsXG4gIGZvbGRlcixcbiAgYWRkTGlzdCxcbiAgYWRkUHJvaixcbiAgZGVsUHJvaixcbiAgZmQsXG4gIHNhdmVUb0xvY2FsXG59OyIsIlxuY29uc3QgYm9keSA9IGRvY3VtZW50LmJvZHk7XG5jb25zdCBlbGVtcyA9IFtdO1xuXG5jb25zdCBhcHBlbmRFbGVtZW50VG8gPSAobm9kZVJlZikgPT4ge1xuICB3aGlsZSAoZWxlbXMubGVuZ3RoID4gMCkge1xuICAgIG5vZGVSZWYuYXBwZW5kQ2hpbGQoZWxlbXMuc3BsaWNlKDAsIDEpWzBdKTtcbiAgfVxufTtcblxuY29uc3QgZ2VuZXJhdGVFbGVtZW50ID0gKGVsZW1lbnQsIG51bSkgPT4ge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG51bTsgaSsrKSB7XG4gICAgZWxlbXMuc3BsaWNlKGVsZW1zLmxlbmd0aCwgMCwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudChlbGVtZW50KSk7XG4gIH1cbn07XG5cbmNvbnN0IGNyZWF0ZUxheW91dCA9IChlbGVtLCBjb3VudCwgbm9kZVJlZiwgLi4uY2xhc3NlcykgPT4ge1xuICBnZW5lcmF0ZUVsZW1lbnQoZWxlbSwgY291bnQpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGNvdW50OyBpKyspIHtcbiAgICBpZiAoY2xhc3Nlc1tpXSA9PT0gdW5kZWZpbmVkKSBjb250aW51ZTtcbiAgICBlbGVtc1tpXS5jbGFzc0xpc3QuYWRkKC4uLmNsYXNzZXNbaV0pXG4gIH1cbiAgYXBwZW5kRWxlbWVudFRvKG5vZGVSZWYpO1xuXG4gIC8vVE9ET1xuICAvL3Rlc3QgYWRkaW5nIHRvIHN0eWxlIHRhZyBpbiBoZWFkXG59O1xuXG5jb25zdCBjbGVhckxheW91dCA9IChub2RlUmVmKSA9PiB7XG4gIHdoaWxlIChub2RlUmVmLmZpcnN0Q2hpbGQpIHtcbiAgICBub2RlUmVmLnJlbW92ZUNoaWxkKG5vZGVSZWYuZmlyc3RDaGlsZCk7XG4gIH1cbn07XG5cbmNvbnN0IGNsZWFyTGF5b3V0U2libGluZyA9IChub2RlUmVmKSA9PiB7XG4gIHdoaWxlIChub2RlUmVmLm5leHRFbGVtZW50U2libGluZykge1xuICAgIG5vZGVSZWYucGFyZW50RWxlbWVudC5yZW1vdmVDaGlsZChub2RlUmVmLm5leHRFbGVtZW50U2libGluZyk7XG4gIH1cbn07XG5cblxuZXhwb3J0IHtcbiAgY3JlYXRlTGF5b3V0LFxuICBjbGVhckxheW91dCxcbiAgY2xlYXJMYXlvdXRTaWJsaW5nXG59OyIsImltcG9ydCAqIGFzIGxheW91dCBmcm9tICcuL2NvbXBvbmVudExheW91dCc7XG5pbXBvcnQgKiBhcyBpbnAgZnJvbSAnLi9jb21wb25lbnRJbnB1dCc7XG5pbXBvcnQgKiBhcyBvYmpzIGZyb20gJy4vY29tcG9uZW50T2Jqcyc7XG5cbmxldCBwcm9qU2VsZWN0ZWQgPSAwO1xuXG5mdW5jdGlvbiByZXNldFNlbGVjdCgpIHtcbiAgcHJvalNlbGVjdGVkID0gMDtcbn1cblxuZnVuY3Rpb24gZGVwbG95TGF5b3V0KGZvbGRlcikge1xuICBsYXlvdXQuY3JlYXRlTGF5b3V0KCdkaXYnLCAxLFxuICAgIGRvY3VtZW50LmJvZHksXG4gICAgWydtYWluLWNvbnRhaW5lciddKTtcbiAgbGF5b3V0LmNyZWF0ZUxheW91dCgnZGl2JywgMSxcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWFpbi1jb250YWluZXInKSxcbiAgICBbJ2ZsZXgtdG9wLWJveCcsICdjb250YWluZXInXSk7XG4gIGxheW91dC5jcmVhdGVMYXlvdXQoJ2RpdicsIDIsXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRhaW5lcicpLFxuICAgIFsnZmxleC1pdGVtJywgJ3NpZGViYXInXSxcbiAgICBbJ2ZsZXgtaXRlbScsICdsaXN0LXBhbmVsJ10pO1xuICBsYXlvdXQuY3JlYXRlTGF5b3V0KCdkaXYnLCAxLFxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaWRlYmFyJyksXG4gICAgWydkaXYtcHJvamVjdCddKTtcbiAgbGF5b3V0LmNyZWF0ZUxheW91dCgnYnV0dG9uJywgMSxcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2lkZWJhciAuZGl2LXByb2plY3QnKSxcbiAgICBbJ2FkZC1wcm9qZWN0J10pO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2lkZWJhciAuYWRkLXByb2plY3QnKVxuICAgIC50ZXh0Q29udGVudCA9ICdBZGQgUHJvamVjdCc7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaWRlYmFyIC5hZGQtcHJvamVjdCcpXG4gICAgLnNldEF0dHJpYnV0ZSgnZGF0YS1uYW1lJywgJ0FERFBSSicpO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2lkZWJhciAuYWRkLXByb2plY3QnKVxuICAgIC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4ge1xuICAgICAgaW5wLmhhbmRsZUlucHV0KGV2ZW50LCBmb2xkZXIpO1xuICAgIH0pO1xuICBsYXlvdXQuY3JlYXRlTGF5b3V0KCdidXR0b24nLCAxLFxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaWRlYmFyIC5kaXYtcHJvamVjdCcpLFxuICAgIFsnZGVsZXRlLXByb2plY3QnXSk7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaWRlYmFyIC5kZWxldGUtcHJvamVjdCcpXG4gICAgLnRleHRDb250ZW50ID0gJ1JlbW92ZSc7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaWRlYmFyIC5kZWxldGUtcHJvamVjdCcpXG4gICAgLnNldEF0dHJpYnV0ZSgnZGF0YS1uYW1lJywgJ0RFTFBSSicpO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2lkZWJhciAuZGVsZXRlLXByb2plY3QnKVxuICAgIC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4ge1xuICAgICAgaW5wLmhhbmRsZUlucHV0KGV2ZW50LCBmb2xkZXIpO1xuICAgIH0pO1xuICBjb25zb2xlLmxvZyhmb2xkZXIpO1xufVxuXG5mdW5jdGlvbiBjYXJkQ3JlYXRlKGxpc3QsIC4uLnByb2plY3QpIHtcbiAgbGF5b3V0LmNyZWF0ZUxheW91dCgnZGl2JywgMSxcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubGlzdC1wYW5lbCcpLFxuICAgIFsnY2FyZCddKTtcbiAgbGF5b3V0LmNyZWF0ZUxheW91dCgnZGl2JywgMSxcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubGlzdC1wYW5lbCA+IC5jYXJkOmxhc3QtY2hpbGQnKSxcbiAgICBbJ2Zvcm0tY29udGFpbmVyJ10pO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubGlzdC1wYW5lbCA+IC5jYXJkOmxhc3QtY2hpbGQnKVxuICAgIC5zZXRBdHRyaWJ1dGUoJ2RhdGEtbGlzdElEJywgbGlzdC5pZCk7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5saXN0LXBhbmVsID4gLmNhcmQ6bGFzdC1jaGlsZCcpXG4gICAgLnNldEF0dHJpYnV0ZSgnZGF0YS1wYXJlbnRJRCcsIGxpc3QucGFyZW50aWQpO1xuICBcbiAgY29uc3QgbGFzdENhcmQgPSAnLmxpc3QtcGFuZWwgPiAuY2FyZDpsYXN0LWNoaWxkJ1xuICBsYXlvdXQuY3JlYXRlTGF5b3V0KCdmb3JtJywgMSxcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGxhc3RDYXJkICsgJyAuZm9ybS1jb250YWluZXInKSk7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobGFzdENhcmQgKyAnIC5mb3JtLWNvbnRhaW5lciA+IGZvcm0nKVxuICAgIC5zZXRBdHRyaWJ1dGUoJ2FjdGlvbicsICcnKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihsYXN0Q2FyZCArICcgLmZvcm0tY29udGFpbmVyID4gZm9ybScpXG4gICAgLnNldEF0dHJpYnV0ZSgnbWV0aG9kJywgJ3Bvc3QnKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihsYXN0Q2FyZCArICcgLmZvcm0tY29udGFpbmVyID4gZm9ybScpXG4gICAgLnNldEF0dHJpYnV0ZSgnaWQnLCAnbGlzdCcpO1xuICBcbiAgLy9pbnB1dHNcbiAgbGF5b3V0LmNyZWF0ZUxheW91dCgnZGl2JywgMixcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGxhc3RDYXJkICsgJyAuZm9ybS1jb250YWluZXIgPiBmb3JtJyksXG4gICAgWyd0aXRsZSddLFxuICAgIFsnZGVzYyddKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihsYXN0Q2FyZCArICcgLmZvcm0tY29udGFpbmVyIC50aXRsZScpXG4gICAgLnNldEF0dHJpYnV0ZSgnY29udGVudGVkaXRhYmxlJywgJ3RydWUnKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihsYXN0Q2FyZCArICcgLmZvcm0tY29udGFpbmVyIC50aXRsZScpXG4gICAgLmlubmVyVGV4dCA9IGxpc3QubmFtZTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihsYXN0Q2FyZCArICcgLmZvcm0tY29udGFpbmVyIC50aXRsZScpXG4gICAgLnNldEF0dHJpYnV0ZSgnZGF0YS1uYW1lJywgJ1NBVkUnKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihsYXN0Q2FyZCArICcgLmZvcm0tY29udGFpbmVyIC50aXRsZScpXG4gICAgLmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCAoZXZlbnQpID0+IHtcbiAgICAgIGlucC5oYW5kbGVJbnB1dChldmVudCwgbGlzdClcbiAgICB9KTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihsYXN0Q2FyZCArICcgLmZvcm0tY29udGFpbmVyIC5kZXNjJylcbiAgICAuc2V0QXR0cmlidXRlKCdjb250ZW50ZWRpdGFibGUnLCAndHJ1ZScpO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGxhc3RDYXJkICsgJyAuZm9ybS1jb250YWluZXIgLmRlc2MnKVxuICAgIC5pbm5lclRleHQgPSBsaXN0LmRlc2M7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobGFzdENhcmQgKyAnIC5mb3JtLWNvbnRhaW5lciAuZGVzYycpXG4gICAgLnNldEF0dHJpYnV0ZSgnZGF0YS1uYW1lJywgJ1NBVkUnKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihsYXN0Q2FyZCArICcgLmZvcm0tY29udGFpbmVyIC5kZXNjJylcbiAgICAuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIChldmVudCkgPT4ge1xuICAgICAgaW5wLmhhbmRsZUlucHV0KGV2ZW50LCBsaXN0KVxuICAgIH0pO1xuICBsYXlvdXQuY3JlYXRlTGF5b3V0KCdidXR0b24nLCAyLFxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobGFzdENhcmQgKyAnIC5mb3JtLWNvbnRhaW5lciA+IGZvcm0nKSxcbiAgICBbJ3NhdmUnXSxcbiAgICBbJ2RlbGV0ZSddKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihsYXN0Q2FyZCArICcgLmZvcm0tY29udGFpbmVyIC5zYXZlJylcbiAgICAuc2V0QXR0cmlidXRlKCd0eXBlJywgJ2J1dHRvbicpO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGxhc3RDYXJkICsgJyAuZm9ybS1jb250YWluZXIgLnNhdmUnKVxuICAgIC5zZXRBdHRyaWJ1dGUoJ2RhdGEtbmFtZScsICdTQVZFJyk7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobGFzdENhcmQgKyAnIC5mb3JtLWNvbnRhaW5lciAuc2F2ZScpXG4gICAgLnRleHRDb250ZW50ID0gJ1NhdmUnO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGxhc3RDYXJkICsgJyAuZm9ybS1jb250YWluZXIgLnNhdmUnKVxuICAgIC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4ge1xuICAgICAgaW5wLmhhbmRsZUlucHV0KGV2ZW50LCBsaXN0KVxuICAgIH0pO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGxhc3RDYXJkICsgJyAuZm9ybS1jb250YWluZXIgLmRlbGV0ZScpXG4gICAgLnNldEF0dHJpYnV0ZSgndHlwZScsICdidXR0b24nKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihsYXN0Q2FyZCArICcgLmZvcm0tY29udGFpbmVyIC5kZWxldGUnKVxuICAgIC5zZXRBdHRyaWJ1dGUoJ2RhdGEtbmFtZScsICdERUxFVEUnKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihsYXN0Q2FyZCArICcgLmZvcm0tY29udGFpbmVyIC5kZWxldGUnKVxuICAgIC50ZXh0Q29udGVudCA9ICdEZWxldGUnO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGxhc3RDYXJkICsgJyAuZm9ybS1jb250YWluZXIgLmRlbGV0ZScpXG4gICAgLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XG4gICAgICBpbnAuaGFuZGxlSW5wdXQoZXZlbnQsIGxpc3QsIHByb2plY3RbMF0pXG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIHByb2pDYXJkQ3JlYXRlKHByaikge1xuICBsYXlvdXQuY3JlYXRlTGF5b3V0KCdkaXYnLCAxLFxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaWRlYmFyJyksXG4gICAgWydwcm9qLWNhcmQnXSk7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaWRlYmFyIC5wcm9qLWNhcmQ6bGFzdC1jaGlsZCcpXG4gICAgLnNldEF0dHJpYnV0ZSgnZGF0YS1wcm9qSUQnLCBwcmouaWQpO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2lkZWJhciAucHJvai1jYXJkOmxhc3QtY2hpbGQnKVxuICAgIC5zZXRBdHRyaWJ1dGUoJ2RhdGEtbmFtZScsICdTV0FQJyk7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaWRlYmFyIC5wcm9qLWNhcmQ6bGFzdC1jaGlsZCcpXG4gICAgLmlubmVyVGV4dCA9IHByai5uYW1lO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2lkZWJhciAucHJvai1jYXJkOmxhc3QtY2hpbGQnKVxuICAgIC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4ge1xuICAgICAgaW5wLmhhbmRsZUlucHV0KGV2ZW50LCBwcmopO1xuICAgIH0pO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2lkZWJhciAucHJvai1jYXJkOmxhc3QtY2hpbGQnKVxuICAgIC5hZGRFdmVudExpc3RlbmVyKCdkYmxjbGljaycsIChldmVudCkgPT4ge1xuICAgICAgaW5wLmhhbmRsZUlucHV0KGV2ZW50LCBwcmopO1xuICAgICAgZXZlbnQudGFyZ2V0LmZvY3VzKCk7XG4gICAgfSk7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zaWRlYmFyIC5wcm9qLWNhcmQ6bGFzdC1jaGlsZCcpXG4gICAgLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZXZlbnQpID0+IHtcbiAgICAgIGlucC5oYW5kbGVJbnB1dChldmVudCwgcHJqKTtcbiAgICAgIC8vaWYgKGV2ZW50LmtleSA9PT0gJ0VudGVyJykgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNpZGViYXIgLnByb2otY2FyZDpsYXN0LWNoaWxkJylcbiAgICAuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIChldmVudCkgPT4ge1xuICAgICAgaW5wLmhhbmRsZUlucHV0KGV2ZW50LCBwcmopO1xuICAgIH0pO1xuICAvL2NvbnNvbGUubG9nKHByaik7XG59XG5cbmZ1bmN0aW9uIGJ1dHRvbkNyZWF0ZUxpc3QocHJvamVjdCkge1xuICBsYXlvdXQuY3JlYXRlTGF5b3V0KCdidXR0b24nLCAxLFxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5saXN0LXBhbmVsJyksXG4gICAgWydhZGQtbGlzdCddKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmxpc3QtcGFuZWwgLmFkZC1saXN0JylcbiAgICAudGV4dENvbnRlbnQgPSAnQWRkIExpc3QnO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubGlzdC1wYW5lbCAuYWRkLWxpc3QnKVxuICAgIC5zZXRBdHRyaWJ1dGUoJ2RhdGEtbmFtZScsICdBRERMSVNUJyk7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5saXN0LXBhbmVsIC5hZGQtbGlzdCcpXG4gICAgLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XG4gICAgICBpbnAuaGFuZGxlSW5wdXQoZXZlbnQsIHByb2plY3QpO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVTY3JlZW5MaXN0KGV2ZW50LCBwcm9qZWN0KSB7XG4gIGNvbnNvbGUubG9nKHByb2plY3QpO1xuICBsYXlvdXQuY2xlYXJMYXlvdXQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmxpc3QtcGFuZWwnKSk7XG4gIGJ1dHRvbkNyZWF0ZUxpc3QocHJvamVjdCk7XG4gIC8vY29uc3QgcHJvaiA9IHByb2plY3RzLmZpbHRlcigocCkgPT4gcC5uYW1lID09PSBldmVudC50YXJnZXQuaW5uZXJUZXh0KTtcbiAgLy9pZiAocHJvai5sZW5ndGggPiAwKSB7XG4gICAgcHJvamVjdC5saXN0cy5mb3JFYWNoKChsaXN0KSA9PiB7XG4gICAgICAvL2NyZWF0ZSBjYXJkXG4gICAgICBjYXJkQ3JlYXRlKGxpc3QsIHByb2plY3QpO1xuICAgIH0pO1xuICAvL31cbn1cblxuZnVuY3Rpb24gdXBkYXRlU2NyZWVuUHJvaihmb2xkZXIpIHtcbiAgbGF5b3V0LmNsZWFyTGF5b3V0U2libGluZyhkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZGl2LXByb2plY3QnKSk7XG4gIGZvbGRlci5mb3JFYWNoKChwcmopID0+IHtcbiAgICAvL2NvbnNvbGUubG9nKHByai5uYW1lICsgJyBwcm9qZWN0XFxuJyk7XG4gICAgcHJvakNhcmRDcmVhdGUocHJqKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHNlbGVjdGVkUHJvamVjdChldmVudCwgbm9kZSkge1xuICBjb25zb2xlLmxvZyhwcm9qU2VsZWN0ZWQpO1xuICBjb25zdCBwcm9qRGl2cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wcm9qLWNhcmQnKTtcbiAgcHJvakRpdnMuZm9yRWFjaCgocHJvakRpdikgPT4ge1xuICAgIHByb2pEaXYuY2xhc3NMaXN0LnJlbW92ZSgncHJvai1jYXJkLXNlbGVjdCcpO1xuICB9KTtcbiAgaWYgKGV2ZW50ID09PSBudWxsIHx8IGV2ZW50ID09PSB1bmRlZmluZWQpIHtcbiAgICBpZiAocHJvalNlbGVjdGVkIDwgMSkge1xuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2otY2FyZCcpXG4gICAgICAgIC5jbGFzc0xpc3QuYWRkKCdwcm9qLWNhcmQtc2VsZWN0Jyk7XG4gICAgICBwcm9qU2VsZWN0ZWQgPSAxO1xuICAgIH1cbiAgICBpZiAocHJvalNlbGVjdGVkID4gMCkge1xuICAgICAgQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2lkZWJhcicpLmNoaWxkcmVuKVxuICAgICAgICAuYXQocHJvalNlbGVjdGVkKS5jbGFzc0xpc3QuYWRkKCdwcm9qLWNhcmQtc2VsZWN0Jyk7XG4gICAgfVxuICB9XG4gIGVsc2Uge1xuICAgIGV2ZW50LnRhcmdldC5jbGFzc0xpc3QuYWRkKCdwcm9qLWNhcmQtc2VsZWN0Jyk7XG4gICAgY29uc3Qgc2lkZWJhckNoaWxkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNpZGViYXInKS5jaGlsZHJlbjtcbiAgICBjb25zdCBzZWxlY3RlZCA9IEFycmF5LmZyb20oc2lkZWJhckNoaWxkKS5maWx0ZXIoKGNoaWxkKSA9PiB7XG4gICAgICByZXR1cm4gY2hpbGQgPT09IGV2ZW50LnRhcmdldDtcbiAgICB9KTtcbiAgICBwcm9qU2VsZWN0ZWQgPSBBcnJheS5mcm9tKHNpZGViYXJDaGlsZCkuaW5kZXhPZihzZWxlY3RlZFswXSk7XG4gICAgLy9jb25zb2xlLmxvZyhldmVudC50YXJnZXQpO1xuICAgIGNvbnNvbGUubG9nKHByb2pTZWxlY3RlZCk7XG5cbiAgfVxufVxuXG5mdW5jdGlvbiBpbml0aWFsaXplU2NyZWVuKGZvbGRlcikge1xuICAvLyBjb25zb2xlXG4gIGZvbGRlci5mb3JFYWNoKChwcmopID0+IHtcbiAgICAvL2NvbnNvbGUubG9nKHByai5uYW1lICsgJyBwcm9qZWN0XFxuJyk7XG4gICAgLy9jb25zb2xlLmxvZyhwcmopO1xuICAgIHByai5saXN0cy5mb3JFYWNoKChsaXN0KSA9PiB7XG4gICAgICAvL2NvbnNvbGUubG9nKCdcXHQgJyArIGxpc3QubmFtZSArICcgJyArIGxpc3QuZGVzYyArICdcXG4nKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgLy9VSVxuICBkZXBsb3lMYXlvdXQoZm9sZGVyKTtcbiAgYnV0dG9uQ3JlYXRlTGlzdChmb2xkZXJbMF0pO1xuICBmb2xkZXIuZm9yRWFjaCgocHJqKSA9PiB7XG4gICAgLy9jb25zb2xlLmxvZyhwcmopO1xuICAgIHByb2pDYXJkQ3JlYXRlKHByaik7XG4gICAgLy9wcmoubGlzdHMuZm9yRWFjaCgobGlzdCkgPT4ge1xuICAgICAgLy9jcmVhdGUgY2FyZFxuICAgICAgLy9jYXJkQ3JlYXRlKGxpc3QpO1xuICAgIC8vfSk7XG4gICAgLy9pZiAocHJqLmxpc3RzLmxlbmd0aCA+IDEpIGNhcmRDcmVhdGUocHJqLmxpc3RzWzBdKTtcbiAgfSk7XG4gIC8vY29uc29sZS5sb2coZm9sZGVyKTtcbiAgaWYgKGZvbGRlci5sZW5ndGggPiAwKSB7XG4gICAgZm9sZGVyWzBdLmxpc3RzLmZvckVhY2goKGxpc3QpID0+IGNhcmRDcmVhdGUobGlzdCwgZm9sZGVyWzBdKSk7XG4gICAgc2VsZWN0ZWRQcm9qZWN0KCk7XG4gIH1cbn1cblxuZXhwb3J0IHtcbiAgZGVwbG95TGF5b3V0LFxuICBpbml0aWFsaXplU2NyZWVuLFxuICB1cGRhdGVTY3JlZW5MaXN0LFxuICB1cGRhdGVTY3JlZW5Qcm9qLFxuICBzZWxlY3RlZFByb2plY3QsXG4gIHByb2pTZWxlY3RlZCxcbiAgcmVzZXRTZWxlY3Rcbn07IiwiaW1wb3J0ICogYXMgc2MgZnJvbSAnLi9jb21wb25lbnRTY3JlZW4nO1xuaW1wb3J0ICogYXMgb2JqcyBmcm9tICcuL2NvbXBvbmVudE9ianMnO1xuaW1wb3J0ICogYXMgbGF5b3V0IGZyb20gJy4vY29tcG9uZW50TGF5b3V0JztcblxuY29uc3QgYWN0aW9ucyA9IHtcbiAgQUREOiAnQUREJyxcbiAgLy9maWxsLi4uXG59O1xuXG5mdW5jdGlvbiBzaG93UHJvakxpc3RzKGV2ZW50LCBwcm9qKSB7XG4gIGNvbnN0IHByb2pEaXZzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNpZGViYXIgLnByb2otY2FyZCcpO1xuICBzYy51cGRhdGVTY3JlZW5MaXN0KGV2ZW50LCBwcm9qKTtcbiAgc2Muc2VsZWN0ZWRQcm9qZWN0KGV2ZW50KTtcbn1cblxuZnVuY3Rpb24gc2F2ZUxpc3QoZXZlbnQsIGxpc3QpIHtcbiAgbGV0IG5hbWVEaXYgPSBldmVudC50YXJnZXQucGFyZW50RWxlbWVudC5maXJzdEVsZW1lbnRDaGlsZDtcbiAgbGV0IGRlc2NEaXYgPSBuYW1lRGl2Lm5leHRFbGVtZW50U2libGluZztcbiAgbGV0IGNhcmRJZCA9IGV2ZW50LnRhcmdldC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnRcbiAgICAucGFyZW50RWxlbWVudC5kYXRhc2V0O1xuICBjb25zb2xlLmxvZyhsaXN0KTtcbiAgbGlzdC5uYW1lID0gbmFtZURpdi5pbm5lclRleHQ7XG4gIGxpc3QuZGVzYyA9IGRlc2NEaXYuaW5uZXJUZXh0O1xuICBjb25zb2xlLmxvZyhsaXN0KTtcbiAgb2Jqcy5zYXZlVG9Mb2NhbCgpO1xufVxuXG5mdW5jdGlvbiBhZGRQcm9qKGV2ZW50LCBmb2xkZXIsIHRlc3ROYW1lKSB7XG4gIC8vZ2V0IGZyb20gZGlhbG9nXG4gIGlmICh0ZXN0TmFtZSA9PT0gdW5kZWZpbmVkKSB0ZXN0TmFtZSA9IGB0ZW1wICR7TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMDApfWA7XG4gIG9ianMuYWRkUHJvaih0ZXN0TmFtZSk7XG4gIHNjLnVwZGF0ZVNjcmVlblByb2ooZm9sZGVyKTtcbiAgc2Muc2VsZWN0ZWRQcm9qZWN0KCk7XG4gIG9ianMuc2F2ZVRvTG9jYWwoKTtcbn1cblxuZnVuY3Rpb24gZGVsZXRlUHJvaihldmVudCwgZm9sZGVyKSB7XG4gIGNvbnN0IHByb2pUb0RlbGV0ZSA9IGZvbGRlci5hdChzYy5wcm9qU2VsZWN0ZWQtMSk7XG4gIC8vY29uc29sZS5sb2cocHJvalRvRGVsZXRlKTtcbiAgY29uc3QgcHJvakV4aXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmRpdi1wcm9qZWN0JykubmV4dEVsZW1lbnRTaWJsaW5nO1xuICAvL2NvbnNvbGUubG9nKHByb2pFeGlzdCk7XG4gIGlmIChwcm9qRXhpc3QgIT0gbnVsbCAmJiBwcm9qVG9EZWxldGUgIT0gdW5kZWZpbmVkKSB7XG4gICAgb2Jqcy5kZWxQcm9qKHByb2pUb0RlbGV0ZSk7XG4gICAgc2MudXBkYXRlU2NyZWVuUHJvaihmb2xkZXIpO1xuICAgIGxheW91dC5jbGVhckxheW91dFNpYmxpbmcoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFkZC1saXN0JykpO1xuICAgIHNjLnJlc2V0U2VsZWN0KCk7XG4gICAgXG4gICAgaWYgKGZvbGRlci5sZW5ndGggPiAwKSB7XG4gICAgICBzYy5zZWxlY3RlZFByb2plY3QoKTtcbiAgICAgIHNjLnVwZGF0ZVNjcmVlbkxpc3QoZXZlbnQsXG4gICAgICBmb2xkZXIuYXQoc2MucHJvalNlbGVjdGVkLTEpKTtcbiAgICB9XG4gIH1cbiAgb2Jqcy5zYXZlVG9Mb2NhbCgpO1xufVxuXG5mdW5jdGlvbiBhZGRMaXN0KGV2ZW50LCBwcm9qZWN0KSB7XG4gIGNvbnNvbGUubG9nKG9ianMuZmQucHJvamVjdHMuaW5kZXhPZihwcm9qZWN0KSk7XG4gIGlmIChvYmpzLmZkLnByb2plY3RzLmluZGV4T2YocHJvamVjdCkgPT09IC0xKSBwcm9qZWN0ID0gdW5kZWZpbmVkO1xuICBpZiAocHJvamVjdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgLy9vYmpzLmFkZFByb2ooJ0RlZmF1bHQnKTtcbiAgICAvL2NvbnNvbGUubG9nKHByb2plY3RzKTtcbiAgICAvL3NjLnVwZGF0ZVNjcmVlblByb2oocHJvamVjdHMpO1xuICAgIGlmIChvYmpzLmZkLnByb2plY3RzWzBdID09PSB1bmRlZmluZWQpXG4gICAgICBhZGRQcm9qKGV2ZW50LCBvYmpzLmZkLnByb2plY3RzLCBgbmFtZSAke01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDAwKX1gKTtcbiAgICBwcm9qZWN0ID0gb2Jqcy5mZC5wcm9qZWN0c1swXTtcbiAgfVxuICBvYmpzLmFkZExpc3QoJycsICcnLCBwcm9qZWN0Lm5hbWUpO1xuICBzYy51cGRhdGVTY3JlZW5MaXN0KGV2ZW50LCBwcm9qZWN0KTtcbiAgY29uc29sZS5sb2cocHJvamVjdC5saXN0cyk7XG4gIG9ianMuc2F2ZVRvTG9jYWwoKTtcbn1cblxuZnVuY3Rpb24gZGVsZXRlTGlzdChldmVudCwgbGlzdCwgcHJvamVjdCkge1xuICBsZXQgY2FyZElkID0gZXZlbnQudGFyZ2V0LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudFxuICAgIC5wYXJlbnRFbGVtZW50LmRhdGFzZXQ7XG5cbiAgY29uc3Qgc2VsZWN0ZWRMaXN0ID0gKG9ianMuZmQucHJvamVjdHMuZmlsdGVyKChwcm9qKSA9PlxuICAgIHByb2ouaWQgPT09IGNhcmRJZC5wYXJlbnRpZFxuICApKVswXS5saXN0cy5pbmRleE9mKGxpc3QpO1xuXG4gIChvYmpzLmZkLnByb2plY3RzLmZpbHRlcigocHJvaikgPT5cbiAgICBwcm9qLmlkID09PSBjYXJkSWQucGFyZW50aWRcbiAgKSlbMF0ubGlzdHMuc3BsaWNlKHNlbGVjdGVkTGlzdCwgMSk7XG5cbiAgY29uc29sZS5sb2cocHJvamVjdCk7XG4gIHNjLnVwZGF0ZVNjcmVlbkxpc3QoZXZlbnQsIHByb2plY3QpO1xuICBjb25zb2xlLmxvZyhzZWxlY3RlZExpc3QpO1xuICBvYmpzLnNhdmVUb0xvY2FsKCk7XG59XG5cbmZ1bmN0aW9uIGRvdWJsZUNsaWNrKGV2ZW50LCBwcm9qKSB7XG4gIGV2ZW50LnRhcmdldC5zZXRBdHRyaWJ1dGUoJ2NvbnRlbnRlZGl0YWJsZScsICd0cnVlJyk7XG59XG5cbmZ1bmN0aW9uIG91dEZvY3VzKGV2ZW50LCBwcm9qKSB7XG4gIGV2ZW50LnRhcmdldC5zZXRBdHRyaWJ1dGUoJ2NvbnRlbnRlZGl0YWJsZScsICdmYWxzZScpO1xuICBwcm9qLm5hbWUgPSBldmVudC50YXJnZXQuaW5uZXJUZXh0O1xuICBvYmpzLnNhdmVUb0xvY2FsKCk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUlucHV0KGV2ZW50LCAuLi5pdGVtcykge1xuICAvL2NvbnNvbGUubG9nKHByb2oubGlzdHNbMF0ubmFtZSk7XG4gIGxldCBlO1xuICBpZiAoRXZlbnQucHJvdG90eXBlLmlzUHJvdG90eXBlT2YoZXZlbnQpKSBlID0gZXZlbnQudGFyZ2V0LmRhdGFzZXQubmFtZTtcbiAgZWxzZSBlID0gJ2UgaXMgbm90IGV2ZW50JztcblxuICBzd2l0Y2ggKGUpIHtcbiAgICBjYXNlICdTQVZFJzpcbiAgICAgIC8vY29uc29sZS5sb2coaXRlbXNbMF0pO1xuICAgICAgc2F2ZUxpc3QoZXZlbnQsIGl0ZW1zWzBdKVxuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnU1dBUCc6XG4gICAgICAvL2NvbnNvbGUubG9nKGUpO1xuICAgICAgaWYgKGV2ZW50LnR5cGUgPT09ICdkYmxjbGljaycpIGRvdWJsZUNsaWNrKGV2ZW50LCBpdGVtc1swXSk7XG4gICAgICBlbHNlIGlmIChldmVudC50eXBlID09PSAna2V5ZG93bicgJiZcbiAgICAgICAgZXZlbnQua2V5ID09PSAnRW50ZXInKSB7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICBvdXRGb2N1cyhldmVudCwgaXRlbXNbMF0pO1xuICAgICAgfVxuICAgICAgZWxzZSBpZiAoZXZlbnQudHlwZSA9PT0gJ2JsdXInKSBvdXRGb2N1cyhldmVudCwgaXRlbXNbMF0pO1xuICAgICAgZWxzZSBpZiAoKGV2ZW50LnR5cGUgPT09ICdjbGljaycpKSBzaG93UHJvakxpc3RzKGV2ZW50LCBpdGVtc1swXSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdBRERQUkonOlxuICAgICAgLy9jb25zb2xlLmxvZyhpdGVtc1swXSk7XG4gICAgICBhZGRQcm9qKGV2ZW50LCBpdGVtc1swXSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdERUxQUkonOlxuICAgICAgLy9jb25zb2xlLmxvZyhpdGVtc1swXSk7XG4gICAgICBkZWxldGVQcm9qKGV2ZW50LCBpdGVtc1swXSk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdBRERMSVNUJzpcbiAgICAgIC8vY29uc29sZS5sb2coaXRlbXNbMF0pO1xuICAgICAgYWRkTGlzdChldmVudCwgaXRlbXNbMF0pO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnREVMRVRFJzpcbiAgICAgIC8vY29uc29sZS5sb2coaXRlbXNbMF0pO1xuICAgICAgZGVsZXRlTGlzdChldmVudCwgaXRlbXNbMF0sIGl0ZW1zWzFdKTtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICAvL2NvbnNvbGUubG9nKGUpO1xuICAgICAgLy9jb25zb2xlLmxvZyhFdmVudC5wcm90b3R5cGUuaXNQcm90b3R5cGVPZihldmVudCkpO1xuICB9XG59XG5cbmV4cG9ydCB7XG4gIGFjdGlvbnMsXG4gIGhhbmRsZUlucHV0XG59OyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCAqIGFzIG9ianMgZnJvbSAnLi9jb21wb25lbnRPYmpzJztcbmltcG9ydCAqIGFzIGlucCBmcm9tICcuL2NvbXBvbmVudElucHV0JztcbmltcG9ydCAqIGFzIHNjIGZyb20gJy4vY29tcG9uZW50U2NyZWVuJztcbi8vaW1wb3J0ICogYXMgbGF5b3V0IGZyb20gJy4vY29tcG9uZW50TGF5b3V0JztcbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xuXG5mdW5jdGlvbiBjb250cm9sbGVyKCkge1xuICAvL2NvbnN0IGxpID0gb2Jqcy5saXN0KCdkZWZhdWx0JywgJ2RlZmF1bHQnKTtcbiAgLy9jb25zdCBwcmogPSBvYmpzLnByb2plY3QoJ0RlZmF1bHQnLCBsaSlcbiAgXG5cbiAgLy90ZXN0IG9ialxuICBcblxuXG4gIGZ1bmN0aW9uIGFkZExpc3RlbmVyKCkge1xuICAgIGNvbnN0IHByb2pEaXZzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNpZGViYXIgLnByb2otY2FyZCcpO1xuICAgIHByb2pEaXZzLmZvckVhY2goKHByb2pEaXYpID0+IHtcbiAgICAgIHByb2pEaXYuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgICBzYy51cGRhdGVTY3JlZW5MaXN0KGUsIGZkLnByb2plY3RzKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgY29uc3Qgc2F2ZUJ0bnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjbGlzdCA+IC5zYXZlJyk7XG4gICAgc2F2ZUJ0bnMuZm9yRWFjaCgoc2F2ZUJ0bikgPT4ge1xuICAgICAgc2F2ZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldmVudCkgPT4ge1xuICAgICAgICBsZXQgbmFtZURpdiA9IGV2ZW50LnRhcmdldC5wYXJlbnRFbGVtZW50LmZpcnN0RWxlbWVudENoaWxkO1xuICAgICAgICBsZXQgZGVzY0RpdiA9IG5hbWVEaXYubmV4dEVsZW1lbnRTaWJsaW5nO1xuICAgICAgICBsZXQgY2FyZElkID0gZXZlbnQudGFyZ2V0LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudFxuICAgICAgICAgIC5wYXJlbnRFbGVtZW50LmRhdGFzZXQ7XG5cbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRMaXN0ID0gKGZkLnByb2plY3RzLmZpbHRlcigocHJvaikgPT4gXG4gICAgICAgICAgcHJvai5pZCA9PT0gY2FyZElkLnBhcmVudGlkXG4gICAgICAgICkpWzBdLmxpc3RzLmZpbHRlcigobGlzdCkgPT4gbGlzdC5pZCA9PT0gY2FyZElkLmxpc3RpZCk7XG4gICAgICAgIFxuICAgICAgICBzZWxlY3RlZExpc3QubmFtZSA9IG5hbWVEaXYuaW5uZXJUZXh0O1xuICAgICAgICBzZWxlY3RlZExpc3QuZGVzYyA9IGRlc2NEaXYuaW5uZXJUZXh0O1xuICAgICAgICBjb25zb2xlLmxvZyhzZWxlY3RlZExpc3QpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gICAgXG4gIH1cblxuICBcblxuICBmdW5jdGlvbiBpbml0aWFsaXplKCkge1xuICAgIC8vb2Jqcy5hZGRQcm9qKCdEZWZhdWx0Jyk7XG4gICAgLy9vYmpzLmFkZFByb2ooJ3Byb2plY3QyMicpO1xuICAgIC8vb2Jqcy5hZGRMaXN0KCcnLCAnJywgJ0RlZmF1bHQnKTtcbiAgICAvL29ianMuYWRkTGlzdCgnRGVmYXVsdDInLCAnZGVmMicsICdwcm9qbmFtZXRlc3QnKTtcbiAgICAvL29ianMuYWRkTGlzdCgnRGVmYXVsdDQnLCAnZGVmMzQnLCAncHJvamVjdDIyJyk7XG4gICAgLy9zYy5kZXBsb3lMYXlvdXQoKTtcbiAgICBzYy5pbml0aWFsaXplU2NyZWVuKG9ianMuZmQucHJvamVjdHMpO1xuICAgIC8vYWRkTGlzdGVuZXIoKTtcbiAgfVxuICBcbiAgcmV0dXJuIHtcbiAgICBpbml0aWFsaXplXG4gIH1cbn1cblxuY29uc3QgaW5pdCA9IGNvbnRyb2xsZXIoKVxuaW5pdC5pbml0aWFsaXplKCk7XG5cbnNldFRpbWVvdXQoKCkgPT4gY29uc29sZS5sb2cob2Jqcy5mZCksIDUwMDApO1xuY29uc29sZS5sb2coSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvYmpzLmZkKSkpO1xuXG4vLyJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJrZXlOYW1lT2JqIiwibGlzdElEIiwicHJvaklEIiwic2F2ZVRvTG9jYWwiLCJvYmpzIiwiZmRTYXZlIiwibGlzdElEU2F2ZSIsInByb2pJRFNhdmUiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiZ2V0SXRlbSIsInBhcnNlIiwiZ2V0RnJvbUxvY2FsIiwicHJvamVjdCIsInByb2plY3RzIiwiZm9sZGVyIiwiYm9keSIsImVsZW1zIiwiY3JlYXRlTGF5b3V0IiwiZWxlbSIsIm5vZGVSZWYiLCJjbGFzc2VzIiwibnVtIiwiZ2VuZXJhdGVFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwiYXBwZW5kRWxlbWVudFRvIiwiY2xlYXJMYXlvdXQiLCJjbGVhckxheW91dFNpYmxpbmciLCJuZXh0RWxlbWVudFNpYmxpbmciLCJwYXJlbnRFbGVtZW50IiwicHJvalNlbGVjdGVkIiwiY2FyZENyZWF0ZSIsInBhcmVudGlkIiwibGFzdENhcmQiLCJpbm5lclRleHQiLCJuYW1lIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwiZGVzYyIsInRleHRDb250ZW50IiwicHJvakNhcmRDcmVhdGUiLCJwcmoiLCJmb2N1cyIsImJ1dHRvbkNyZWF0ZUxpc3QiLCJ1cGRhdGVTY3JlZW5MaXN0IiwiY29uc29sZSIsImxvZyIsImxpc3RzIiwiZm9yRWFjaCIsInVwZGF0ZVNjcmVlblByb2oiLCJzZWxlY3RlZFByb2plY3QiLCJub2RlIiwicXVlcnlTZWxlY3RvckFsbCIsInByb2pEaXYiLCJBcnJheSIsImZyb20iLCJjaGlsZHJlbiIsImF0Iiwic2lkZWJhckNoaWxkIiwic2VsZWN0ZWQiLCJmaWx0ZXIiLCJjaGlsZCIsImluZGV4T2YiLCJ0ZXN0TmFtZSIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsInByb2pOYW1lIiwibmV3UHJvaiIsIm91dEZvY3VzIiwicHJvaiIsImhhbmRsZUlucHV0IiwiaXRlbXMiLCJFdmVudCIsImlzUHJvdG90eXBlT2YiLCJkYXRhc2V0IiwibmFtZURpdiIsImZpcnN0RWxlbWVudENoaWxkIiwiZGVzY0RpdiIsInNhdmVMaXN0IiwidHlwZSIsImRvdWJsZUNsaWNrIiwicHJldmVudERlZmF1bHQiLCJzaG93UHJvakxpc3RzIiwicHJvalRvRGVsZXRlIiwicHJvamVjdE9iaiIsInByb2pJbmRleCIsImRlbGV0ZVByb2oiLCJjYXJkSWQiLCJzZWxlY3RlZExpc3QiLCJkZWxldGVMaXN0IiwibG9jYWxzIiwiZGVwbG95TGF5b3V0Iiwic2V0VGltZW91dCJdLCJzb3VyY2VSb290IjoiIn0=